{{- if .Values.OperationsCenter.Enabled -}}
apiVersion: "apps/v1"
kind: "StatefulSet"
metadata:
  name: cjoc
  labels:
    com.cloudbees.cje.type: cjoc
    com.cloudbees.cje.tenant: cjoc
{{ include "cloudbees-core.labels" . | indent 4 }}
    app.kubernetes.io/component: cjoc
spec:
  selector:
    matchLabels:
      com.cloudbees.cje.type: cjoc
      com.cloudbees.cje.tenant: cjoc
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  serviceName: cjoc
  template:
    metadata:
{{- if .Values.OperationsCenter.Annotations}}
      annotations:
{{toYaml .Values.OperationsCenter.Annotations | indent 8 }}
{{- end }}
      name: cjoc
      labels:
        com.cloudbees.cje.type: cjoc
        com.cloudbees.cje.tenant: cjoc
{{ include "cloudbees-core.labels" . | indent 8 }}
        app.kubernetes.io/component: cjoc
    spec:
      affinity:
        nodeAffinity:
          # Schedule on linux nodes only.
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                  - linux
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              # Prefer nodes where there are no masters
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchExpressions:
                    - key: com.cloudbees.cje.type
                      operator: In
                      values:
                        - master
            - weight: 1
              # Prefer nodes where there are no agents
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchExpressions:
                    - key: jenkins
                      operator: In
                      values:
                        - slave
      enableServiceLinks: false
      serviceAccountName: {{ .Values.rbac.serviceAccountName }}
      {{- if .Values.OperationsCenter.NodeSelector }}
      nodeSelector:
{{ toYaml .Values.OperationsCenter.NodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.OperationsCenter.Tolerations }}
      tolerations:
{{ toYaml .Values.OperationsCenter.Tolerations | indent 8 }}
      {{- end }}
      {{- if .Values.OperationsCenter.Affinity }}
      affinity:
{{ toYaml .Values.OperationsCenter.Affinity | indent 8 }}
      {{- end }}
      {{- if or (not (eq (toString .Values.OperationsCenter.RunAsUser) "")) (.Values.OperationsCenter.RunAsGroup) (include "oc.fsGroup" .) }}
      securityContext:
        {{- if not (eq (toString .Values.OperationsCenter.RunAsUser) "") }}
        runAsUser: {{ .Values.OperationsCenter.RunAsUser }}
        {{- end }}
        {{- if .Values.OperationsCenter.RunAsGroup }}
        runAsGroup: {{ .Values.OperationsCenter.RunAsGroup }}
        {{- end }}
        {{- if include "oc.fsGroup" . }}
        fsGroup: {{ include "oc.fsGroup" . }}
        {{- end }}
      {{- end }}
      terminationGracePeriodSeconds: 10
      containers:
      - name: jenkins
        {{- with .Values.OperationsCenter.Image}}
        image: "{{ .dockerImage }}"
        {{- if .dockerPullPolicy }}
        imagePullPolicy: "{{ .dockerPullPolicy }}"
        {{- end}}
        {{- end}}
        env:
        {{- if .Values.OperationsCenter.ContainerEnv }}
{{ toYaml .Values.OperationsCenter.ContainerEnv | indent 8 }}
        {{- end }}
        - name:  MASTER_GLOBAL_JAVA_OPTIONS
          # TODO perhaps use the map idiom from https://github.com/helm/helm/issues/3767#issuecomment-376769054
          value: >-
            {{- if .Values.OperationsCenter.CSRF.ProxyCompatibility }}
            -Djenkins.model.Jenkins.crumbIssuerProxyCompatibility=true
            {{- end }}
            {{- if .Values.Agents.Image.dockerImage }}
            -Dorg.csanchez.jenkins.plugins.kubernetes.pipeline.PodTemplateStepExecution.defaultImage={{ .Values.Agents.Image.dockerImage }}
            {{- end }}
            {{- if .Values.Agents.SeparateNamespace.Enabled }}
            -Dcom.cloudbees.jenkins.plugins.kube.NamespaceFilter.defaultNamespace={{ template "agents.namespace" . }}
            {{- end }}
            -Dcom.cloudbees.jenkins.plugins.kube.ServiceAccountFilter.defaultServiceAccount={{ .Values.rbac.agentsServiceAccountName }}
            -Dcom.cloudbees.networking.useSubdomain={{ default "false" (include "cloudbees-core.use-subdomain" .) }}
            -Dcom.cloudbees.networking.protocol={{ include "oc.protocol" . | quote }}
            -Dcom.cloudbees.networking.hostname={{ .Values.OperationsCenter.HostName | quote }}
            -Dcom.cloudbees.networking.port={{ include "oc.port" . }}
            -Dcom.cloudbees.networking.operationsCenterName={{ include "oc.name" . | quote }}
            {{- if .Values.Master.JavaOpts }}
            {{ .Values.Master.JavaOpts }}
            {{- end }}
        - name: ENVIRONMENT
          value: KUBERNETES
        - name: JENKINS_OPTS
          value: >-
            --httpPort={{ .Values.OperationsCenter.ContainerPort }}
            --prefix={{ include "oc.contextpath" . }}
            {{ default "" .Values.OperationsCenter.JenkinsOpts}}
        - name: JAVA_OPTS
          # To allocate masters using a non-default storage class, add the following
          # -Dcom.cloudbees.masterprovisioning.kubernetes.KubernetesMasterProvisioning.storageClassName=some-storage-class
          value: >-
            -XshowSettings:vm
            -Dhudson.lifecycle=hudson.lifecycle.ExitLifecycle
            -Djenkins.model.Jenkins.slaveAgentPort={{ .Values.OperationsCenter.AgentListenerPort }}
            -Djenkins.model.Jenkins.slaveAgentPortEnforce=true
            -Dcom.cloudbees.opscenter.analytics.reporter.JocAnalyticsReporter.PERIOD=120
            -Dcom.cloudbees.opscenter.analytics.reporter.metrics.AperiodicMetricSubmitter.PERIOD=120
            -Dcom.cloudbees.opscenter.analytics.FeederConfiguration.PERIOD=120
            -Dcom.cloudbees.networking.useSubdomain={{ default "false" (include "cloudbees-core.use-subdomain" .) }}
            -Dcom.cloudbees.networking.protocol={{ include "oc.protocol" . | quote }}
            -Dcom.cloudbees.networking.hostname={{ .Values.OperationsCenter.HostName | quote }}
            -Dcom.cloudbees.networking.port={{ include "oc.port" . }}
            -Dcom.cloudbees.networking.operationsCenterName={{ include "oc.name" . | quote }}
            -Dcom.cloudbees.masterprovisioning.kubernetes.KubernetesMasterProvisioning.fsGroup={{ include "oc.fsGroup" . }}
            -Dcom.cloudbees.jce.masterprovisioning.DockerImageDefinitionConfiguration.disableAutoConfiguration=true
            -Dcom.cloudbees.jce.masterprovisioning.DockerImageDefinitionConfiguration.masterImageName={{ include "mm.longname" . | quote}}
            -Dcom.cloudbees.jce.masterprovisioning.DockerImageDefinitionConfiguration.masterImage={{ .Values.Master.Image.dockerImage}}
            -Dcom.cloudbees.masterprovisioning.kubernetes.KubernetesMasterProvisioning.serviceAccount={{ .Values.rbac.masterServiceAccountName }}
            {{- if .Values.Agents.SeparateNamespace.Enabled }}
            -Dcom.cloudbees.jenkins.plugins.kube.NamespaceFilter.defaultNamespace={{ template "agents.namespace" . }}
            {{- end }}
            {{- if and (include "persistence.storageclass" . ) (ne "-" (include "persistence.storageclass" . )) }}
            -Dcom.cloudbees.masterprovisioning.kubernetes.KubernetesMasterProvisioning.storageClassName={{ include "persistence.storageclass" . | quote }}
            {{- end }}
            {{- if .Values.OperationsCenter.Ingress.Class }}
            -Dcom.cloudbees.masterprovisioning.kubernetes.KubernetesMasterProvisioning.ingressClass={{ .Values.OperationsCenter.Ingress.Class }}
            {{- end }}
            {{- if not (include "oc.hostnamewithoutport" .) }}
            -Dcom.cloudbees.masterprovisioning.kubernetes.KubernetesClusterEndpoint.wildcardIngress=true
            {{- end }}
            {{- if .Values.OperationsCenter.JavaOpts }}
            {{ .Values.OperationsCenter.JavaOpts }}
            {{- end }}
            {{- if .Values.OperationsCenter.CSRF.ProxyCompatibility }}
            -Djenkins.model.Jenkins.crumbIssuerProxyCompatibility=true
            {{- end }}
            {{- if .Values.sda }}
            {{- if .Values.OperationsCenter.HostName }}
            -Dcom.cloudbees.jenkins.plugins.platform.PlatformConfiguration.url={{- include "oc.protocol" . -}}://{{ include "oc.hostname" . }}/
            {{- end }}
            -Dcom.cloudbees.jenkins.plugins.platform.PlatformServer.apiUrl=https://flow-server.{{ .Release.Namespace }}:8443/
            {{- end }}
            {{- if .Values.OperationsCenter.CasC.Enabled }}
            -Dcore.casc.config.bundle=/var/jenkins_config/oc-casc-bundle
            {{- end }}
            -XX:+UseG1GC
            -XX:+DisableExplicitGC
        ports:
        - containerPort: {{ .Values.OperationsCenter.ContainerPort }}
          name: http
        - containerPort: {{ .Values.OperationsCenter.AgentListenerPort}}
          name: jnlp
        {{- if .Values.OperationsCenter.JMXPort }}
        - containerPort: {{ .Values.OperationsCenter.JMXPort }}
          name: jmx
        {{- end }}
        resources:
          limits:
            cpu: "{{ default .Values.OperationsCenter.Resources.Limits.Cpu .Values.OperationsCenter.Cpu }}"
            memory: "{{ default .Values.OperationsCenter.Resources.Limits.Memory .Values.OperationsCenter.Memory }}"
          requests:
            cpu: "{{ .Values.OperationsCenter.Resources.Requests.Cpu }}"
            memory: "{{ .Values.OperationsCenter.Resources.Requests.Memory }}"
        volumeMounts:
        - name: jenkins-home
          mountPath: /var/jenkins_home
          readOnly: false
        - name: jenkins-configure-jenkins-groovy
          mountPath: /var/jenkins_config/configure-jenkins.groovy.d
          readOnly: true
        - name: tmp
          mountPath: /tmp
        {{- if .Values.OperationsCenter.CasC.Enabled }}
        - name: oc-casc-bundle
          mountPath: /var/jenkins_config/oc-casc-bundle
          readOnly: true
        {{- end }}
{{- if .Values.OperationsCenter.ExtraVolumeMounts }}
{{toYaml .Values.OperationsCenter.ExtraVolumeMounts | indent 8}}
{{- end }}
{{- if .Values.OperationsCenter.HealthProbes }}
        readinessProbe:
            httpGet:
              path: {{ include "oc.contextpath" . }}/login
              port: {{.Values.OperationsCenter.ContainerPort}}
            initialDelaySeconds: 30
            timeoutSeconds: 5
            failureThreshold: 100
        livenessProbe:
            httpGet:
              path: {{ include "oc.contextpath" . }}/login
              port: {{.Values.OperationsCenter.ContainerPort}}
            initialDelaySeconds: 300
            timeoutSeconds: 5
            failureThreshold: {{ .Values.OperationsCenter.HealthProbeLivenessFailureThreshold }}
{{- end }}
{{- if .Values.OperationsCenter.ExtraContainers }}
{{toYaml .Values.OperationsCenter.ExtraContainers | indent 6}}
{{- end }}
      volumes:
      - name: jenkins-configure-jenkins-groovy
        configMap:
          name: cjoc-configure-jenkins-groovy
      - name: tmp
        emptyDir:
          medium: {{ .Values.OperationsCenter.TmpVolumeMedium | quote }}
      {{- if .Values.OperationsCenter.CasC.Enabled }}
      - name: oc-casc-bundle
        configMap:
          name: {{ .Values.OperationsCenter.CasC.ConfigMapName | quote }}
          optional: true
      {{- end }}
{{- if .Values.OperationsCenter.ExtraVolumes }}
{{toYaml .Values.OperationsCenter.ExtraVolumes | indent 6}}
{{- end }}
  volumeClaimTemplates:
  - metadata:
{{- if .Values.Persistence.Annotations }}
      annotations:
{{ toYaml .Values.Persistence.Annotations | indent 8 }}
{{- end }}
      name: jenkins-home
      labels:
        app: cjoc
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
    spec:
      accessModes:
        - {{ .Values.Persistence.AccessMode | quote }}
      resources:
        requests:
          storage: {{ .Values.Persistence.Size | quote }}
{{- if or (typeIs "string" .Values.Persistence.StorageClass) (include "persistence.storageclass" .) }}
      storageClassName: {{ include "persistence.storageclass" . | quote }}
{{- end -}}
{{- end -}}
